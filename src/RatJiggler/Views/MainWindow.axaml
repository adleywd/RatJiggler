<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RatJiggler.Views"
        xmlns:vm="using:RatJiggler.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="RatJiggler.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/logo.ico"
        Title="{Binding Title}"
        Height="670"
        Width="640"
        MinHeight="670"
        MinWidth="640"
        CanResize="True"
        ShowInTaskbar="True"
        WindowState="Normal"
        WindowStartupLocation="CenterScreen"
        SizeToContent="Width"
        SystemDecorations="Full"
        UseLayoutRounding="True"
        RequestedThemeVariant="Dark">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <!-- Key Bindings for Keyboard Shortcuts -->
    <Window.KeyBindings>
        <!-- Ctrl + R to Start Movement -->
        <KeyBinding Gesture="Ctrl+R"
                    Command="{Binding StartMouseMovementByHotkeyCommand}" />

        <!-- Ctrl + C to Stop Movement -->
        <KeyBinding Gesture="Ctrl+C"
                    Command="{Binding StopMovementCommand}" />
    </Window.KeyBindings>

    <Border Background="{DynamicResource BackgroundMediumColor}" CornerRadius="8" Margin="5">
        <Grid Margin="20" HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />     <!-- Settings Container -->
                <RowDefinition Height="Auto" />  <!-- Controls Container -->
                <RowDefinition Height="Auto" />  <!-- Status Message -->
            </Grid.RowDefinitions>

            <!-- Settings Container -->
            <Border Grid.Row="0"
                    Background="{DynamicResource BackgroundDarkColor}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource BorderLightColor}"
                    CornerRadius="5"
                    Padding="10"
                    Margin="0,0,0,20">
                
                <!-- Tab Control for Modes -->
                <TabControl SelectedIndex="{Binding SelectedTabIndex}"
                            HorizontalAlignment="Stretch"
                            TabStripPlacement="Top">
                    <TabControl.Styles>
                        <!-- Style for TabItem -->
                        <Style Selector="TabItem">
                            <Setter Property="Width" Value="280"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border Background="{TemplateBinding Background}"
                                                BorderThickness="0"
                                                BorderBrush="{TemplateBinding BorderBrush}">
                                            <ContentPresenter Content="{TemplateBinding Header}" 
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <!-- Style for TextBlock in TabItem Header -->
                        <Style Selector="TabItem TextBlock">
                            <Setter Property="TextDecorations">
                                <Setter.Value>
                                    <TextDecorationCollection/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Styles>

                    <!-- Tabs -->
                    <TabItem Cursor="Hand">
                        <TabItem.Header>
                            <TextBlock Text="Simple" />
                        </TabItem.Header>
                        <local:SimpleMovementView DataContext="{Binding SimpleMovementViewModel}" />
                    </TabItem>
                    <TabItem Cursor="Hand">
                        <TabItem.Header>
                            <TextBlock Text="Realistic" />
                        </TabItem.Header>
                        <local:RealisticMovementView DataContext="{Binding RealisticMovementViewModel}" />
                    </TabItem>
                </TabControl>
            </Border>

            <!-- Controls Container -->
            <Border Grid.Row="1"
                    Background="{DynamicResource BackgroundDarkColor}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource BorderLightColor}"
                    CornerRadius="5"
                    Padding="15"
                    Margin="0,0,0,15">
                
                <StackPanel>
                    <!-- Auto Start Checkbox -->
                    <CheckBox IsChecked="{Binding AutoStartMovement}"
                              Content="Auto-start when application launches"
                              HorizontalAlignment="Center"
                              Margin="0,0,0,15"
                              ToolTip.Tip="When enabled, mouse movement will start automatically when the application starts"/>
                
                    <!-- Movement Control Buttons -->
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                Spacing="15">
                        <Button Width="200" 
                               Command="{Binding StartMouseMovementByHotkeyCommand}"
                               IsEnabled="{Binding !IsMovementRunning}">
                            <Panel>
                                <TextBlock TextAlignment="Center">
                                    <Run Text="Start Moving Mouse" FontWeight="Medium" FontSize="14" />
                                    <LineBreak />
                                    <Run Text="(Press Ctrl + R)" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}" />
                                </TextBlock>
                            </Panel>
                        </Button>
                        
                        <Button Width="200" 
                               Command="{Binding StopMovementCommand}" 
                               Classes="secondary"
                               IsEnabled="{Binding IsMovementRunning}">
                            <Panel>
                                <TextBlock TextAlignment="Center">
                                    <Run Text="Stop Mouse Movement" FontWeight="Medium" FontSize="14" />
                                    <LineBreak />
                                    <Run Text="(Press Ctrl + C)" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}" />
                                </TextBlock>
                            </Panel>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Border>

            <!-- Status Message -->
            <Border Grid.Row="2"
                   Background="{Binding StatusMessageBackground}" 
                   CornerRadius="5" 
                   Padding="15,10" 
                   Margin="0,5,0,0">
                <TextBlock Text="{Binding StatusMessage}"
                           HorizontalAlignment="Center"
                           FontSize="14"
                           FontWeight="SemiBold"
                           Foreground="{Binding StatusMessageColor}" />
            </Border>
        </Grid>
    </Border>
</Window>